<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAABAAAAAQACAYAAAB/HSuDAAAABGdBTUEAALGPC/xhBQAAABl0RVh0U29m
        dHdhcmUAQWRvYmUgSW1hZ2VSZWFkeXHJZTwAACh+SURBVHhe7d3tdRu31gXglOB0kBJUgkpQCSpBJbgD
        l5ASXIJLcAkpISW879kOcDOhQYukhsP5eJ619o+bm9gURQIHMweD3wAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        4Aa///77H5XXyufKS/vHAPvTBrun9j8BAGDXqvb9lIV+5Uvle+Vb/nf7vwH2qQa6pwx87X8CAMAuVc37
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAKzDb7/9P5epmmkiku2TAAAAAElFTkSuQmCC
</value>
  </data>
</root>